import java.util.Random;

/*
Задание 2.

Влечение противоположностей
-Создайте массив на 10 элементов
-Заполните его случайными числами из всего диапазона int'a
-Выведите все элементы массива на экран

Теперь преобразуйте массив:
Проверьте все  "соседние" элементы массива (начинайте с 0 индекса и до самого конца).
Если элементы разных знаков - то заменить оба элемента их суммой и начните проверку заново для всех элементов.
Если одно из чисел 0 - то ничего не делайте.
Выведите получившийся массив на экран.

Например,
массив [1,2,3,4,5,-7,2]
массив [1,2,3,4,2]
массив [1,2,3,-2,2]
массив [1,2,3,2,2]
*/
class Lecture2Task2{
	public static void main(String[] args){
		System.out.println("=======================================");
		//test();
		Random random = new Random();
		final int NUMS = 10;
		int[] numbers = new int[NUMS];
		for(int i = NUMS; --i >= 0; ){
			// positive and negative signs of random
			numbers[i] = (random.nextBoolean() ? 1:-1) * random.nextInt(Integer.MAX_VALUE);
		}
		for(int j = 0; j<10; ++j){
			System.out.println(numbers[j]);
		}
		for(int i = 0; i<numbers.length-1; ++i){
			final int first = numbers[i];
			final int second = numbers[i+1];
			if(0 > first*second){
				numbers[i] = numbers[i+1] = first + second;
				i = -1;
			}
		}
		System.out.println("-- After calculation --");
		for(int j = 0; j<10; ++j){
			System.out.println(numbers[j]);
		}
	}
	private static void test(){
		Random random = new Random(11111);
		int[] n = new int[10];
		for(int i = 0; i<10; ++i){
			n[i] = random.nextInt(10) - random.nextInt(10);
			// n[i] = i*i-i*30+ i%;
		}
		for(int i = 0; i<10-1; ++i){
			printArray(n,i);
			final int first = n[i];
			final int second = n[i+1];
			System.out.print("i=" + i + " [" + first + "," + second + "]");
			if(0 > first*second){
				System.out.print(" -> " + (first + second));
				n[i] = n[i+1] = first + second;
				i = -1;
			}
			System.out.println();
		}
		for(int j = 0; j<10; ++j){
			System.out.print(n[j] + " ");
		}System.out.println();
	}
	private static void printArray(final int[] array, final int i){
		for(int j = 0; j<10; ++j){
			System.out.print((j==i?"[":" ") + (array[j]>=0?" ":"") + array[j] + (j==i+1?"] ":"  ") );
		}
	}
}
/* output:
=======================================
1139416221
-60507572
-1080938896
-2080658907
-338084332
293194590
-33224714
1625752849
-120585106
680461312
-- After calculation --
-171526520
359819942
-1551473518
-1551473518
-1542949478
711188833
-650241662
-1897502786
-1897502786
1538962911

test()
[ 3   -1]  -2    1    1   -3   -7    3    3   -1  i=0 [3,-1] -> 2
[ 2    2]  -2    1    1   -3   -7    3    3   -1  i=0 [2,2]
  2  [ 2   -2]   1    1   -3   -7    3    3   -1  i=1 [2,-2] -> 0
[ 2    0]   0    1    1   -3   -7    3    3   -1  i=0 [2,0]
  2   [0    0]   1    1   -3   -7    3    3   -1  i=1 [0,0]
  2    0   [0    1]   1   -3   -7    3    3   -1  i=2 [0,1]
  2    0    0  [ 1    1]  -3   -7    3    3   -1  i=3 [1,1]
  2    0    0    1  [ 1   -3]  -7    3    3   -1  i=4 [1,-3] -> -2
[ 2    0]   0    1   -2   -2   -7    3    3   -1  i=0 [2,0]
  2   [0    0]   1   -2   -2   -7    3    3   -1  i=1 [0,0]
  2    0   [0    1]  -2   -2   -7    3    3   -1  i=2 [0,1]
  2    0    0  [ 1   -2]  -2   -7    3    3   -1  i=3 [1,-2] -> -1
[ 2    0]   0   -1   -1   -2   -7    3    3   -1  i=0 [2,0]
  2   [0    0]  -1   -1   -2   -7    3    3   -1  i=1 [0,0]
  2    0   [0   -1]  -1   -2   -7    3    3   -1  i=2 [0,-1]
  2    0    0  [-1   -1]  -2   -7    3    3   -1  i=3 [-1,-1]
  2    0    0   -1  [-1   -2]  -7    3    3   -1  i=4 [-1,-2]
  2    0    0   -1   -1  [-2   -7]   3    3   -1  i=5 [-2,-7]
  2    0    0   -1   -1   -2  [-7    3]   3   -1  i=6 [-7,3] -> -4
[ 2    0]   0   -1   -1   -2   -4   -4    3   -1  i=0 [2,0]
  2   [0    0]  -1   -1   -2   -4   -4    3   -1  i=1 [0,0]
  2    0   [0   -1]  -1   -2   -4   -4    3   -1  i=2 [0,-1]
  2    0    0  [-1   -1]  -2   -4   -4    3   -1  i=3 [-1,-1]
  2    0    0   -1  [-1   -2]  -4   -4    3   -1  i=4 [-1,-2]
  2    0    0   -1   -1  [-2   -4]  -4    3   -1  i=5 [-2,-4]
  2    0    0   -1   -1   -2  [-4   -4]   3   -1  i=6 [-4,-4]
  2    0    0   -1   -1   -2   -4  [-4    3]  -1  i=7 [-4,3] -> -1
[ 2    0]   0   -1   -1   -2   -4   -1   -1   -1  i=0 [2,0]
  2   [0    0]  -1   -1   -2   -4   -1   -1   -1  i=1 [0,0]
  2    0   [0   -1]  -1   -2   -4   -1   -1   -1  i=2 [0,-1]
  2    0    0  [-1   -1]  -2   -4   -1   -1   -1  i=3 [-1,-1]
  2    0    0   -1  [-1   -2]  -4   -1   -1   -1  i=4 [-1,-2]
  2    0    0   -1   -1  [-2   -4]  -1   -1   -1  i=5 [-2,-4]
  2    0    0   -1   -1   -2  [-4   -1]  -1   -1  i=6 [-4,-1]
  2    0    0   -1   -1   -2   -4  [-1   -1]  -1  i=7 [-1,-1]
  2    0    0   -1   -1   -2   -4   -1  [-1   -1] i=8 [-1,-1]

2 0 0 -1 -1 -2 -4 -1 -1 -1
 */