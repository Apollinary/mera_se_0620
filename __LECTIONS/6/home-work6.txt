Задание 1. Пара-Тройка кортежей

Создайте два класса для хранения кортежей - упорядоченного списка элементов определенных типов
Pair - содержит пару таких элементов.
Triple - содержит тройку таких элементов.

у каждого класса создайте методы, которые возвращают элементы на определенных позициях.
 - getFirst
 - getSecond
 - getThird (только для Triple)

У каждого класса создайте конструктор со 2(Pair) или тремя (Triple) параметрами нужного типа.

Для каждого класса определите методы equals и hashCode.

Пример использования
Pair<String, Integer> lastNameToAge = new Pair<> ("Пупкин", 18);
String lastName = lastNameToAge.geFirst();
Integer age = lastNameToAge.getSecond();

Pair<String, List<String>> lastNameToPhoneNumbers = new Pair<>("Пупкин", Arrays.asList("+7 831 2112233", "+7 920 000 22 22"))
String lastName = lastNameToPhoneNumbers.geFirst();
List<String> phoneNumbers = lastNameToPhoneNumbers.getSecond();

Аналогично  с Triple, только параметра типа и параметров констркторов должно быть 3.


Задание А. Работа с парами:
Создайте класс Animal с полями имя(String) и тип животного (тоже String)
Создайте список, состоящий из нескольких пар: животное и любимое блюдо(String) этого животного.


Создайте метод feedAnimals(List<Pair<Animal,String>>);
ЛОгика работы этого метода такая:
Для каждого животного выводится надпись:
"Животное %ИМЯ с радостью съедает %БЛЮДО

+ в этом методе сгенерируйте случайное число от 0 до размера списка с животными.
Это - номер животного, которое сегодня получит двойною порцию любимой еды.
Для такого животного выведите надпись
"Счастливое животное %имя получает двойную порцию %БЛЮДО"

Замечания: вы можете справедливо заметить, что любимое блюдо вполне можно было объявить полем класса.
Но иногда удобнее дополнительное поле вынести за рамки класса, например:
- Когда  у вас есть библиотечный класс и вы не можете его менять.
- Когда поле нужно использовать один раз, чтобы не засорять класс доп. полями.


Задание Б.Список посещений
Создайте класс Person  с именем и фамилией

Создайте класс Date с полями число, месяц, год.
Для хранения месяца используйте enum.
Для хранения максимальной даты в каждом месяце используйте поле в enum.
Високосные года не учитывайте.

Класс Date - неизменяемый, у него должен быть конструктор со всеми параметрами и геттеры.

Задача - сгенерировать случайный список посещений используя
HashSet<Triple<Person,Date,String>>
и
List<Triple<Person,Date,String>>


String в данном случае - это место посещения.
 Один человек может посещать одно и то же место два раза в один день.
 Но должна быть возможность просто вывести список, без дубликатов.

 Создайте 5 разных человек.
 Определите 3 разных места, которые могут посещать люди (например: дом, работа, библиотка)
 Пусть каждый человек посетит 300 мест в случайные даты в течение одного года.

 Запишите каждое посещение, используя тройку: человек, дата, место в HashSet и в List
 Если размеры List'a и Set'a  совпадают - выведите на экран надпись "Ни один человек не посещал одно и то же место два раза в один день".

 Иначе - ничего не выводите.